{"version":3,"sources":["components/AppHeader/AppHeader.js","components/FormSection/FormSection.js","components/EventForm/FormHelper.js","components/Input/Input.js","components/EventForm/ErrorMessages.js","components/TextArea/TextArea.js","components/DescribedInput/DescribedInput.js","components/Select/Select.js","components/RadioButton/RadioButton.js","components/EventForm/EventForm.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","_ref","header","react_default","a","createElement","className","FormSection","children","API","categories","coordinators","titleValidation","parseCoordinators","response","map","item","name","lastname","join","id","PAID_EVENT_VALUES","FREE","PAID","MERIDIEM_VALUES","AM","PM","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","novalidate","setErrorMessage","input","validity","handleChange","event","customValidation","then","hasError","custom","setState","showErrors","onChange","errorTypes","prop","push","errorMessage","errorMessages","getInputClasses","state","renderHint","hint","renderError","_this2","ref","value","type","placeholder","required","Component","ERROR_MESSAGES","title","valueMissing","description","email","typeMismatch","date","time","TextArea","rows","maxLength","length","DescribedInput","classes","min","Select","options","option","key","RadioButton","checked","label","EventForm","fetch","json","selectLogedInCoordinator","logedInUserId","prevState","form","objectSpread","responsible","toString","handleSubmit","current","reportValidity","console","log","dateTimeValue","meridiem","moment","format","category_id","Number","category","paid_event","event_fee","fee","reward","duration","coordinator","parseOutput","wasValidated","preventDefault","validateTitle","target","events","titles","includes","handleInputChange","inputName","defineProperty","formSetup","React","createRef","onSubmit","noValidate","components_FormSection_FormSection","htmlFor","Input_Input","TextArea_TextArea","Select_Select","RadioButton_RadioButton","DescribedInput_DescribedInput","App","components_AppHeader_AppHeader","EventForm_EventForm_EventForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bc64a02.chunk.js","sourcesContent":["import React from 'react';\nimport './AppHeader.scss';\n\nconst AppHeader = ({header}) => {\n  return (\n    <header className=\"app-header\">\n      <div className=\"container\">\n        <h1>{header}</h1>\n      </div>\n    </header>\n  );\n}\n\nexport default AppHeader;","import React from 'react';\nimport './FormSection.scss';\n\nconst FormSection = ({header, children}) => {\n  return (\n    <div className=\"form-section\">\n      <h2 className=\"form-section__header\">{header}</h2>\n      <hr/>\n      <div className=\"form-section__body\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSection;\n","import moment from 'moment';\n\nconst API = {\n    categories: 'https://www.mocky.io/v2/5bcdd3942f00002c00c855ba',\n    coordinators: 'https://www.mocky.io/v2/5bcdd7992f00006300c855d5',\n    titleValidation: 'https://www.mocky.io/v2/5bcdd8732f00007300c855da'\n}\n\nexport function parseOutput(input) {\n    const secondsInHour = 60*60;\n    const dateTimeValue = input.date + ' ' + input.time + ' ' + input.meridiem;\n\n    const date = moment(dateTimeValue).format('YYYY-MM-DDTHH:mm');\n\n    const output = {\n        title: input.title,\n        description: input.description,\n        category_id: Number(input.category),\n        paid_event: input.paid_event === PAID_EVENT_VALUES.FREE ? 0 :1,\n        event_fee: Number(input.fee),\n        reward: Number(input.reward),\n        date: date,\n        duration: Number(input.duration) * secondsInHour,\n        coordinator: {\n            id: input.responsible,\n            email: input.email\n        }\n    }\n\n    return output;\n}\n\nexport function getCategories() {\n    return fetch(API.categories)\n        .then(response => response.json());\n}\n\nconst parseCoordinators = (response) => {\n    return response.map(item => {\n      return {\n        name: [item.name, item.lastname].join(' '),\n        id: item.id\n      }\n    });\n  }\n\nexport function getCoordinators() {\n    return fetch(API.coordinators)\n        .then(response => response.json())\n        .then(json => parseCoordinators(json));\n}\n\nexport function isTitleInUse(title) {\n    return fetch(API.titleValidation)\n        .then(response => response.json())\n        .then(events => events.map(event => event.title))\n        .then(titles => titles.includes(title));\n}\n\nexport function getLogedInUserId() {\n    return 3;\n}\n\nexport const PAID_EVENT_VALUES = {\n    FREE: 'FREE',\n    PAID: 'PAID'\n}\n\nexport const MERIDIEM_VALUES = {\n    AM: 'AM',\n    PM: 'PM'\n}","import React, { Component } from 'react'\n\nexport default class Input extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errorMessage: '',\n            showErrors: false\n        }\n    }\n\n    componentDidMount = () => {\n        if(!this.props.novalidate) {\n            this.setErrorMessage(this.input.validity);\n        }\n    }\n    \n\n  handleChange = (event) => {\n      if(!this.props.novalidate) {\n        this.setErrorMessage(this.input.validity);\n      }\n\n      if(this.props.customValidation) {\n        this.props.customValidation(event)\n            .then(hasError => {\n                this.input.validity.custom = hasError;\n                this.setErrorMessage(this.input.validity);\n\n                this.setState({\n                    showErrors: hasError\n                });\n            });\n      }\n\n      this.props.onChange(event);\n  }  \n\n  setErrorMessage = (validity) => {\n    const errorTypes = [];\n\n    for(let prop in validity) {\n        if(validity[prop]) {\n            errorTypes.push(prop);\n        }\n    }\n\n    this.setState({\n        errorMessage: this.props.errorMessages[errorTypes[0]]\n    })\n  }\n\n  getInputClasses = () => {\n      return this.state.showErrors ? \"form-control has-errors\" : \"form-control\";\n  }\n\n  renderHint = () => {\n      return (this.props.hint ?\n        <div className=\"form-control__hint\">\n            {this.props.hint}\n        </div> : null);\n  }\n\n  renderError = () => {\n    return (this.state.errorMessage ?\n        <div className=\"form-control__error\">\n            {this.state.errorMessage}\n        </div> : null);\n  }\n\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n         <input\n            ref={input => this.input = input}\n            id={this.props.id} \n            name={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n            type={this.props.type}\n            placeholder={this.props.placeholder}\n            required={this.props.required}/>\n\n        {this.renderHint()}\n        {this.renderError()}\n\n      </div>\n    );\n  }\n}\n","export const ERROR_MESSAGES = {\n    title: {\n        valueMissing: 'Title cannot be empty',\n        custom: 'Title already in use'\n    },\n    description: {\n        valueMissing: 'Description cannot be empty',\n    },\n    email: {\n        valueMissing: 'Email cannot be empty',\n        typeMismatch: 'Wrong email address'\n    },\n    date: {\n        valueMissing: 'Date cannot be empty',\n    },\n    time: {\n        valueMissing: 'Time cannot be empty',\n    }\n}","import React from 'react'\nimport Input from '../Input/Input';\n\nexport default class TextArea extends Input {\n\n    render() {\n        return (\n          <div className={this.getInputClasses()}>\n             <textarea\n                ref={input => this.input = input}\n                rows={this.props.rows}\n                maxLength={this.props.maxLength}\n                id={this.props.id} \n                name={this.props.name}\n                value={this.props.value}\n                onChange={this.handleChange}\n                type={this.props.type}\n                placeholder={this.props.placeholder}\n                required={this.props.required}/>\n    \n            <div className=\"form-control__hint\">\n                Max length {this.props.maxLength} characters\n                <span className=\"f-rigth\">{this.props.value.length}/{this.props.maxLength}</span>\n            </div>\n            {this.renderError()}\n            \n          </div>\n        );\n      }\n}","import React from 'react'\nimport Input from '../Input/Input';\n\nexport default class DescribedInput extends Input {\n\n    getInputClasses = () => {\n        const classes = ['form-control form-control-inline'];\n        if(this.state.showErrors) classes.push('has-errors');\n        if(this.props.className) classes.push(this.props.className);\n\n        return classes.join(' ');\n    }\n\n    render() {\n        return (\n          <div className={this.getInputClasses()}>\n             <input\n                ref={input => this.input = input}\n                id={this.props.id} \n                name={this.props.name}\n                min={this.props.min}\n                value={this.props.value}\n                onChange={this.handleChange}\n                type={this.props.type}\n                placeholder={this.props.placeholder}\n                required={this.props.required}/>\n            <span className=\"form-control__description\">{this.props.description}</span>\n\n            {this.renderHint()}\n            {this.renderError()}\n            \n          </div>\n        );\n      }\n}","import React, { Component } from 'react'\n\nexport default class Select extends Component {\n\n    renderHint = () => {\n        return (this.props.hint ?\n          <div className=\"form-control__hint\">\n              {this.props.hint}\n          </div> : null);\n    }\n\n  render() {\n    return (\n        <div className=\"form-control\">\n            <select\n                value={this.props.value}\n                onChange={this.props.onChange}\n                name={this.props.name}\n                id={this.props.id}>\n                \n                { this.props.placeholder ? <option value=\"\">{this.props.placeholder}</option> : null }\n                \n                { this.props.options.map(\n                    option => {\n                        return <option key={option.id} value={option.id}>{option.name}</option>\n                    }\n                )}                 \n            </select>\n\n            {this.renderHint()}\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class RadioButton extends Component {\n  render() {\n    return (\n       <div className=\"form-control form-control-inline\">\n        <input \n          type={this.props.type}\n          name={this.props.name}\n          onChange={this.props.onChange}\n          checked={this.props.checked}\n          value={this.props.value}/>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport FormSection from '../FormSection/FormSection';\nimport './EventForm.scss';\nimport moment from 'moment';\nimport { parseOutput, MERIDIEM_VALUES, PAID_EVENT_VALUES, getCategories, getCoordinators, getLogedInUserId, isTitleInUse } from './FormHelper';\nimport Input from '../Input/Input';\nimport { ERROR_MESSAGES } from './ErrorMessages';\nimport TextArea from '../TextArea/TextArea';\nimport DescribedInput from '../DescribedInput/DescribedInput';\nimport Select from '../Select/Select';\nimport RadioButton from '../RadioButton/RadioButton';\n\nexport default class EventForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      form: {\n        title: '',\n        description: '',\n        category: '',\n        paid_event: PAID_EVENT_VALUES.FREE,\n        fee: '',\n        reward: '',\n        responsible: '',\n        email: '',\n        date: '',\n        time: '',\n        meridiem: MERIDIEM_VALUES.AM,\n        duration: ''\n      },\n      categories: [],\n      coordinators: [],\n      logedInUserId: null,\n      wasValidated: false\n    }\n\n    this.formSetup = {\n      description: {\n        maxLength: 140\n      },\n      fee: {\n        min: 0\n      },\n      reward: {\n        min: 0\n      },\n      date: {\n        min: moment().format('YYYY-MM-DD')\n      },\n      duration: {\n        min: 0\n      }\n    }\n\n    this.form = React.createRef();\n  }\n\n  componentDidMount = () => {\n    getCategories()\n      .then(categories => {\n        this.setState({categories});\n      });\n\n    getCoordinators()\n      .then(coordinators => this.selectLogedInCoordinator(coordinators))\n      .then(coordinators => {\n        this.setState({coordinators});\n      });\n\n    const logedInUserId = getLogedInUserId();\n\n    this.setState(prevState => ({\n      logedInUserId,\n      form: {\n        ...prevState.form,\n        responsible: logedInUserId.toString()\n      }\n    })); \n  }\n\n  selectLogedInCoordinator(coordinators) {\n    return coordinators.map(coordinator => {\n      if(coordinator.id === this.state.logedInUserId) {\n        coordinator.name = \"Me - \" + coordinator.name;\n      }\n\n      return coordinator;\n    });\n  }\n\n  handleSubmit = (event) => {\n    if(this.form.current.reportValidity()) {\n      console.log('Output: ', parseOutput(this.state.form));\n    }\n\n    this.setState({\n      wasValidated: true\n    });\n\n    event.preventDefault();\n  }\n\n  validateTitle = (event) => {\n    return isTitleInUse(event.target.value);\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    \n    this.setState(prevState => ({\n      form: {\n        ...prevState.form,\n        [inputName]: value\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"event-form\">\n        <form ref={this.form} onSubmit={this.handleSubmit} noValidate className={this.state.wasValidated ? \"was-validated\" : \"\"}>\n          <FormSection header=\"About\">\n           <div className=\"form-group required\">\n            <label htmlFor=\"title\">TITLE</label>\n            <Input\n              id=\"title\" \n              name=\"title\"\n              value={this.state.form.title}\n              onChange={this.handleInputChange}\n              type=\"text\"\n              placeholder=\"Make it short and clear\"\n              customValidation={this.validateTitle}\n              errorMessages={ERROR_MESSAGES.title}\n              required={true}/>\n           </div>\n\n           <div className=\"form-group required\">\n            <label htmlFor=\"description\">DESCRIPTION</label>\n            <TextArea\n              rows=\"4\"\n              maxLength={this.formSetup.description.maxLength}\n              id=\"description\" \n              name=\"description\"\n              hint=\"Max length {this.formSetup.description.maxLength} characters\"\n              type=\"text\" \n              value={this.state.form.description}\n              placeholder=\"Write about your event, be creative\"\n              errorMessages={ERROR_MESSAGES.description}\n              onChange={this.handleInputChange}\n              required={true}/>\n           </div>\n\n           <div className=\"form-group\">\n            <label htmlFor=\"category\">CATEGORY</label>\n            <Select\n              value={this.state.form.category}\n              onChange={this.handleInputChange}\n              name=\"category\"\n              id=\"category\"\n              options={this.state.categories}\n              placeholder=\"Select category\"\n              hint=\"Describes topis and people who should be intrested in this event\"/>\n           </div>\n\n           <div className=\"form-group form-group-inline\">\n            <label>PAYMENT</label>\n            <RadioButton\n              type=\"radio\" \n              name=\"paid_event\" \n              onChange={this.handleInputChange}\n              checked={this.state.form.paid_event === PAID_EVENT_VALUES.FREE}\n              value={PAID_EVENT_VALUES.FREE}\n              label=\"Free event\"/>\n            <RadioButton\n              type=\"radio\" \n              name=\"paid_event\" \n              onChange={this.handleInputChange}\n              checked={this.state.form.paid_event === PAID_EVENT_VALUES.PAID}\n              value={PAID_EVENT_VALUES.PAID}\n              label=\"Paid event\"/>\n            {this.state.form.paid_event === PAID_EVENT_VALUES.PAID ? \n            <DescribedInput\n              type=\"number\" \n              className=\"fee-control short\" \n              name=\"fee\" \n              value={this.state.form.fee}\n              onChange={this.handleInputChange}\n              min={this.formSetup.fee.min}\n              placeholder=\"Fee\"\n              description=\"$\"\n              novalidate={true}/>\n            : null}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"reward\">REWARD</label>\n              <DescribedInput\n                type=\"number\" \n                className=\"short\" \n                id=\"reward\" \n                name=\"reward\"\n                value={this.state.form.reward}\n                onChange={this.handleInputChange}\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"reward points for attendance\"\n                novalidate={true}/>\n          </div>\n\n          </FormSection>\n          <FormSection header=\"Coordinator\">\n            \n           <div className=\"form-group required\">\n            <label htmlFor=\"responsible\">RESPONSIBLE</label>\n            <Select\n              value={this.state.form.responsible}\n              onChange={this.handleInputChange}\n              name=\"responsible\"\n              id=\"responsible\"\n              options={this.state.coordinators}/>\n           </div>\n\n           <div className=\"form-group\">\n            <label htmlFor=\"email\">EMAIL</label>\n            <Input\n              id=\"email\" \n              name=\"email\"\n              value={this.state.form.email}\n              onChange={this.handleInputChange}\n              type=\"email\" \n              placeholder=\"Email\"\n              errorMessages={ERROR_MESSAGES.email}/>\n           </div>\n\n          </FormSection>\n          <FormSection header=\"When\">\n\n            <div className=\"form-group required form-group-inline\">\n              <label>STARTS ON</label>\n              <DescribedInput\n                id=\"date\" \n                name=\"date\"\n                onChange={this.handleInputChange}\n                type=\"date\"\n                className=\"medium\"\n                min={this.formSetup.date.min}\n                placeholder=\"dd/mm/yyyy\"\n                description=\"at\"\n                errorMessages={ERROR_MESSAGES.date}\n                required={true}/>\n\n              <DescribedInput\n                id=\"time\" \n                name=\"time\"\n                onChange={this.handleInputChange}\n                type=\"time\"\n                className=\"time-control\"\n                placeholder=\"--:--\"\n                errorMessages={ERROR_MESSAGES.time}\n                required={true}/>\n\n              <RadioButton\n                type=\"radio\" \n                onChange={this.handleInputChange}\n                checked={this.state.form.meridiem === MERIDIEM_VALUES.AM}\n                name=\"meridiem\"\n                value={MERIDIEM_VALUES.AM}\n                label=\"AM\"/>\n              <RadioButton\n                type=\"radio\" \n                onChange={this.handleInputChange}\n                checked={this.state.form.meridiem === MERIDIEM_VALUES.PM}\n                name=\"meridiem\"\n                value={MERIDIEM_VALUES.PM}\n                label=\"PM\"/>\n            </div>\n            \n            <div className=\"form-group form-group-inline\">\n              <label htmlFor=\"duration\">DURATION</label>\n              <DescribedInput\n                id=\"duration\" \n                name=\"duration\"\n                onChange={this.handleInputChange}\n                type=\"number\" \n                value={this.state.form.duration}\n                className=\"short\"\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"hours\"\n                novalidate={true}/>\n            </div>\n          \n          </FormSection>\n          <button \n            type=\"submit\"\n            className=\"btn-secondary event-form__submit-btn\">Publish Event</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport EventForm from './components/EventForm/EventForm';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader header=\"New event\"/>\n        <div className=\"app__body\">\n          <div className=\"container\">\n            <EventForm/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}