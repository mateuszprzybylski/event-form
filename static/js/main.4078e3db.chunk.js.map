{"version":3,"sources":["components/AppHeader/AppHeader.js","components/Section/Section.js","components/EventForm/FormHelper.js","components/EventForm/EventAPI.js","components/Input/Input.js","components/EventForm/ErrorMessages.js","components/TextArea/TextArea.js","components/DescribedInput/DescribedInput.js","components/Select/Select.js","components/RadioButton/RadioButton.js","components/EventForm/EventForm.js","components/InfoPage/InfoPage.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","_ref","header","react_default","a","createElement","className","SECTION_TYPE","Section","children","type","parseDateTime","input","dateTimeValue","date","time","meridiem","moment","format","PAID_EVENT_VALUES","FREE","PAID","MERIDIEM_VALUES","AM","PM","API","categories","coordinators","titleValidation","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","novalidate","setErrorMessage","validity","handleChange","event","customValidation","target","value","onChange","debounce","then","hasError","setCustomValidity","setState","showErrors","errorTypes","prop","push","errorMessage","errorMessages","getInputClasses","classes","defaultInputClass","state","join","renderHint","hint","renderError","_this2","ref","id","name","placeholder","required","Component","ERROR_MESSAGES","title","valueMissing","customError","description","fee","email","typeMismatch","patternMismatch","TextArea","rows","maxLength","length","DescribedInput","pattern","max","min","Select","options","map","option","key","RadioButton","checked","label","EventForm","fetch","response","json","item","lastname","selectLogedInCoordinator","logedInUserId","prevState","form","objectSpread","responsible","toString","handleSubmit","current","reportValidity","history","console","log","category_id","Number","category","paid_event","event_fee","reward","duration","coordinator","wasValidated","preventDefault","validateTitle","events","titles","includes","EventAPI","handleInputChange","inputName","defineProperty","FormHelper","formSetup","React","createRef","logedInCoordinator","modifiedCoordinatorList","forEach","unshift","onSubmit","noValidate","components_Section_Section","htmlFor","Input_Input","TextArea_TextArea","Select_Select","RadioButton_RadioButton","DescribedInput_DescribedInput","InfoPage","message","App","components_AppHeader_AppHeader","HashRouter","Switch","Route","exact","path","component","render","components_InfoPage_InfoPage","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4078e3db.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AppHeader.scss\";\n\nconst AppHeader = ({ header }) => {\n  return (\n    <header className=\"app-header\">\n      <div className=\"container\">\n        <h1>{header}</h1>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./Section.scss\";\n\nexport const SECTION_TYPE = {\n  SUCCESS: \"section-success\",\n  WARNING: \"section-warning\",\n  INFO: \"section-info\"\n};\n\nconst Section = ({ header, children, type }) => {\n  return (\n    <div className={\"section \" + type}>\n      <h2 className=\"section__header\">{header}</h2>\n      <hr />\n      <div className=\"section__body\">{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import moment from \"moment\";\n\nexport function parseFormData(input) {\n  const secondsInHour = 60 * 60;\n\n  const output = {\n    title: input.title,\n    description: input.description,\n    category_id: Number(input.category),\n    paid_event: input.paid_event === PAID_EVENT_VALUES.PAID,\n    event_fee: Number(input.fee),\n    reward: Number(input.reward),\n    date: parseDateTime(input),\n    duration: Number(input.duration) * secondsInHour,\n    coordinator: {\n      id: input.responsible,\n      email: input.email\n    }\n  };\n\n  return output;\n}\n\nexport function parseDateTime(input) {\n  const { date, time, meridiem } = input;\n  const dateTimeValue = date + \" \" + time + \" \" + meridiem;\n  const outputFormat = \"YYYY-MM-DDTHH:mm\";\n\n  return moment(dateTimeValue, \"YYYY-MM-DD HH:mm am\").format(outputFormat);\n}\n\nexport function parseCoordinators(coordinators) {\n  return coordinators.map(item => {\n    return {\n      name: [item.name, item.lastname].join(\" \"),\n      id: item.id\n    };\n  });\n};\n\nexport const PAID_EVENT_VALUES = {\n  FREE: \"FREE\",\n  PAID: \"PAID\"\n};\n\nexport const MERIDIEM_VALUES = {\n  AM: \"AM\",\n  PM: \"PM\"\n};\n","const API = {\n  categories: \"https://www.mocky.io/v2/5bcdd3942f00002c00c855ba\",\n  coordinators: \"https://www.mocky.io/v2/5bcdd7992f00006300c855d5\",\n  titleValidation: \"https://www.mocky.io/v2/5bcdd8732f00007300c855da\"\n};\n\nexport function getCategories() {\n  return fetch(API.categories).then(response => response.json());\n}\n\nexport function getCoordinators() {\n  return fetch(API.coordinators)\n    .then(response => response.json());\n}\n\nexport function isTitleInUse(title) {\n  return fetch(API.titleValidation)\n    .then(response => response.json())\n    .then(events => events.map(event => event.title))\n    .then(titles => titles.includes(title));\n}\n\nexport function getLogedInUserId() {\n  return 3;\n}","import React, { Component } from \"react\";\nimport { debounce } from \"underscore\";\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: \"\",\n      showErrors: false\n    };\n\n    this.defaultInputClass = \"form-control\";\n  }\n\n  componentDidMount = () => {\n    if (!this.props.novalidate) {\n      this.setErrorMessage(this.input.validity);\n    }\n  };\n\n  handleChange = event => {\n    if (!this.props.novalidate) {\n      this.setErrorMessage(this.input.validity);\n    }\n\n    if (this.props.customValidation) {\n      this.customValidation(event.target.value);\n    }\n\n    this.props.onChange(event);\n  };\n\n  customValidation = debounce(value => {\n    this.props.customValidation(value).then(hasError => {\n      this.input.setCustomValidity(hasError ? ' ' : '');\n      this.setErrorMessage(this.input.validity);\n\n      this.setState({\n        showErrors: hasError\n      });\n    });\n  }, 1000);\n\n  setErrorMessage = validity => {\n    const errorTypes = [];\n\n    for (let prop in validity) {\n      if (validity[prop]) {\n        errorTypes.push(prop);\n      }\n    }\n\n    this.setState({\n      errorMessage: this.props.errorMessages[errorTypes[0]]\n    });\n  };\n\n  getInputClasses = () => {\n    const classes = [this.defaultInputClass];\n    if (this.state.showErrors) classes.push(\"has-errors\");\n    if (this.props.className) classes.push(this.props.className);\n\n    return classes.join(\" \");\n  };\n\n  renderHint = () => {\n    return this.props.hint ? (\n      <div className=\"form-control__hint\">{this.props.hint}</div>\n    ) : null;\n  };\n\n  renderError = () => {\n    return this.state.errorMessage ? (\n      <div className=\"form-control__error\">{this.state.errorMessage}</div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <input\n          ref={input => (this.input = input)}\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        {this.renderHint()}\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","export const ERROR_MESSAGES = {\n  title: {\n    valueMissing: \"Title cannot be empty\",\n    customError: \"Title already in use\"\n  },\n  description: {\n    valueMissing: \"Description cannot be empty\"\n  },\n  fee: {\n    valueMissing: \"Fee cannot be empty\"\n  },\n  email: {\n    valueMissing: \"Email cannot be empty\",\n    typeMismatch: \"Wrong email address\"\n  },\n  date: {\n    valueMissing: \"Date cannot be empty\"\n  },\n  time: {\n    valueMissing: \"Time cannot be empty\",\n    patternMismatch: \"Time should have 12 hours format (HH:mm)\"\n  }\n};\n","import React from \"react\";\nimport Input from \"../Input/Input\";\n\nexport default class TextArea extends Input {\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <textarea\n          ref={input => (this.input = input)}\n          rows={this.props.rows}\n          maxLength={this.props.maxLength}\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        <div className=\"form-control__hint\">\n          Max length {this.props.maxLength} characters\n          <span className=\"f-rigth\">\n            {this.props.value.length}/{this.props.maxLength}\n          </span>\n        </div>\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Input from \"../Input/Input\";\n\nexport default class DescribedInput extends Input {\n\n  constructor(props) {\n    super(props);\n\n    this.defaultInputClass = \"form-control form-control-inline\";\n  }\n\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <input\n          ref={input => (this.input = input)}\n          pattern={this.props.pattern}\n          id={this.props.id}\n          maxLength={this.props.max}\n          name={this.props.name}\n          min={this.props.min}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        <span className=\"form-control__description\">\n          {this.props.description}\n        </span>\n\n        {this.renderHint()}\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Select extends Component {\n  renderHint = () => {\n    return this.props.hint ? (\n      <div className=\"form-control__hint\">{this.props.hint}</div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <div className=\"form-control\">\n        <select\n          value={this.props.value}\n          onChange={this.props.onChange}\n          name={this.props.name}\n          id={this.props.id}\n        >\n          {this.props.placeholder ? (\n            <option value=\"\">{this.props.placeholder}</option>\n          ) : null}\n\n          {this.props.options.map(option => {\n            return (\n              <option key={option.id} value={option.id}>\n                {option.name}\n              </option>\n            );\n          })}\n        </select>\n\n        {this.renderHint()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RadioButton extends Component {\n  render() {\n    return (\n      <div className=\"form-control form-control-inline\">\n        <input\n          type={this.props.type}\n          name={this.props.name}\n          onChange={this.props.onChange}\n          checked={this.props.checked}\n          value={this.props.value}\n        />\n        <span>{this.props.label}</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Section from \"../Section/Section\";\nimport \"./EventForm.scss\";\nimport moment from \"moment\";\nimport * as FormHelper from \"./FormHelper\";\nimport * as EventAPI from \"./EventAPI\";\nimport Input from \"../Input/Input\";\nimport { ERROR_MESSAGES } from \"./ErrorMessages\";\nimport TextArea from \"../TextArea/TextArea\";\nimport DescribedInput from \"../DescribedInput/DescribedInput\";\nimport Select from \"../Select/Select\";\nimport RadioButton from \"../RadioButton/RadioButton\";\n\nexport default class EventForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      form: {\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        paid_event: FormHelper.PAID_EVENT_VALUES.FREE,\n        fee: \"\",\n        reward: \"\",\n        responsible: \"\",\n        email: \"\",\n        date: \"\",\n        time: \"\",\n        meridiem: FormHelper.MERIDIEM_VALUES.AM,\n        duration: \"\"\n      },\n      categories: [],\n      coordinators: [],\n      logedInUserId: null,\n      wasValidated: false\n    };\n\n    this.formSetup = {\n      description: {\n        maxLength: 140\n      },\n      fee: {\n        min: 0\n      },\n      reward: {\n        min: 0\n      },\n      date: {\n        min: moment().format(\"YYYY-MM-DD\")\n      },\n      duration: {\n        min: 0\n      }\n    };\n\n    this.form = React.createRef();\n  }\n\n  componentDidMount = () => {\n    EventAPI.getCategories().then(categories => {\n      this.setState({ categories });\n    });\n\n    EventAPI.getCoordinators()\n      .then(json => FormHelper.parseCoordinators(json))\n      .then(coordinators => this.selectLogedInCoordinator(coordinators))\n      .then(coordinators => {\n        this.setState({ coordinators });\n      });\n\n    const logedInUserId = EventAPI.getLogedInUserId();\n\n    this.setState(prevState => ({\n      logedInUserId,\n      form: {\n        ...prevState.form,\n        responsible: logedInUserId.toString()\n      }\n    }));\n  };\n\n  selectLogedInCoordinator(coordinators) {\n    let modifiedCoordinatorList = [];\n    let logedInCoordinator;\n\n    coordinators.forEach(coordinator => {\n      if (coordinator.id === this.state.logedInUserId) {\n        coordinator.name = \"Me - \" + coordinator.name;\n        logedInCoordinator = coordinator;\n      } else {\n        modifiedCoordinatorList.push(coordinator);\n      }\n    });\n\n    modifiedCoordinatorList.unshift(logedInCoordinator);\n\n    return modifiedCoordinatorList;\n  }\n\n  handleSubmit = event => {\n    if (this.form.current.reportValidity()) {\n      this.props.history.push(\"/success\");\n      console.log(\"Output: \", FormHelper.parseFormData(this.state.form));\n    }\n\n    this.setState({\n      wasValidated: true\n    });\n\n    event.preventDefault();\n  };\n\n  validateTitle = title => {\n    return EventAPI.isTitleInUse(title);\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n\n    this.setState(prevState => ({\n      form: {\n        ...prevState.form,\n        [inputName]: value\n      }\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"event-form\">\n        <form\n          ref={this.form}\n          onSubmit={this.handleSubmit}\n          noValidate\n          className={this.state.wasValidated ? \"was-validated\" : \"\"}\n        >\n          <Section header=\"About\">\n            <div className=\"form-group required\">\n              <label htmlFor=\"title\">TITLE</label>\n              <Input\n                id=\"title\"\n                name=\"title\"\n                value={this.state.form.title}\n                onChange={this.handleInputChange}\n                type=\"text\"\n                placeholder=\"Make it short and clear\"\n                customValidation={this.validateTitle}\n                errorMessages={ERROR_MESSAGES.title}\n                required={true}\n              />\n            </div>\n            <div className=\"form-group required\">\n              <label htmlFor=\"description\">DESCRIPTION</label>\n              <TextArea\n                rows=\"4\"\n                maxLength={this.formSetup.description.maxLength}\n                id=\"description\"\n                name=\"description\"\n                hint=\"Max length {this.formSetup.description.maxLength} characters\"\n                type=\"text\"\n                value={this.state.form.description}\n                placeholder=\"Write about your event, be creative\"\n                errorMessages={ERROR_MESSAGES.description}\n                onChange={this.handleInputChange}\n                required={true}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">CATEGORY</label>\n              <Select\n                value={this.state.form.category}\n                onChange={this.handleInputChange}\n                name=\"category\"\n                id=\"category\"\n                options={this.state.categories}\n                placeholder=\"Select category\"\n                hint=\"Describes topis and people who should be intrested in this event\"\n              />\n            </div>\n            <div className=\"form-group form-group-inline\">\n              <label>PAYMENT</label>\n              <RadioButton\n                type=\"radio\"\n                name=\"paid_event\"\n                onChange={this.handleInputChange}\n                checked={\n                  this.state.form.paid_event ===\n                  FormHelper.PAID_EVENT_VALUES.FREE\n                }\n                value={FormHelper.PAID_EVENT_VALUES.FREE}\n                label=\"Free event\"\n              />\n              <RadioButton\n                type=\"radio\"\n                name=\"paid_event\"\n                onChange={this.handleInputChange}\n                checked={\n                  this.state.form.paid_event ===\n                  FormHelper.PAID_EVENT_VALUES.PAID\n                }\n                value={FormHelper.PAID_EVENT_VALUES.PAID}\n                label=\"Paid event\"\n              />\n              {this.state.form.paid_event ===\n              FormHelper.PAID_EVENT_VALUES.PAID ? (\n                <DescribedInput\n                  type=\"number\"\n                  className=\"fee-control short\"\n                  name=\"fee\"\n                  value={this.state.form.fee}\n                  onChange={this.handleInputChange}\n                  min={this.formSetup.fee.min}\n                  placeholder=\"Fee\"\n                  errorMessages={ERROR_MESSAGES.fee}\n                  description=\"$\"\n                  required={this.state.form.paid_event}\n                  novalidate={!this.state.form.paid_event}\n                />\n              ) : null}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"reward\">REWARD</label>\n              <DescribedInput\n                type=\"number\"\n                className=\"short\"\n                id=\"reward\"\n                name=\"reward\"\n                value={this.state.form.reward}\n                onChange={this.handleInputChange}\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"reward points for attendance\"\n                novalidate={true}\n              />\n            </div>\n          </Section>\n          <Section header=\"Coordinator\">\n            <div className=\"form-group required\">\n              <label htmlFor=\"responsible\">RESPONSIBLE</label>\n              <Select\n                value={this.state.form.responsible}\n                onChange={this.handleInputChange}\n                name=\"responsible\"\n                id=\"responsible\"\n                options={this.state.coordinators}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">EMAIL</label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                value={this.state.form.email}\n                onChange={this.handleInputChange}\n                type=\"email\"\n                placeholder=\"Email\"\n                errorMessages={ERROR_MESSAGES.email}\n              />\n            </div>\n          </Section>\n          <Section header=\"When\">\n            <div className=\"form-group required form-group-inline\">\n              <label>STARTS ON</label>\n              <DescribedInput\n                id=\"date\"\n                name=\"date\"\n                onChange={this.handleInputChange}\n                type=\"date\"\n                className=\"medium\"\n                min={this.formSetup.date.min}\n                placeholder=\"dd/mm/yyyy\"\n                description=\"at\"\n                errorMessages={ERROR_MESSAGES.date}\n                required={true}\n              />\n              <DescribedInput\n                id=\"time\"\n                name=\"time\"\n                onChange={this.handleInputChange}\n                type=\"text\"\n                max=\"5\"\n                pattern=\"^(1[0-2]|0?[1-9]):[0-5][0-9]$\"\n                className=\"time-control short\"\n                placeholder=\"--:--\"\n                errorMessages={ERROR_MESSAGES.time}\n                required={true}\n              />\n              <RadioButton\n                type=\"radio\"\n                onChange={this.handleInputChange}\n                checked={\n                  this.state.form.meridiem === FormHelper.MERIDIEM_VALUES.AM\n                }\n                name=\"meridiem\"\n                value={FormHelper.MERIDIEM_VALUES.AM}\n                label=\"AM\"\n              />\n              <RadioButton\n                type=\"radio\"\n                onChange={this.handleInputChange}\n                checked={\n                  this.state.form.meridiem === FormHelper.MERIDIEM_VALUES.PM\n                }\n                name=\"meridiem\"\n                value={FormHelper.MERIDIEM_VALUES.PM}\n                label=\"PM\"\n              />\n            </div>\n            <div className=\"form-group form-group-inline\">\n              <label htmlFor=\"duration\">DURATION</label>\n              <DescribedInput\n                id=\"duration\"\n                name=\"duration\"\n                onChange={this.handleInputChange}\n                type=\"number\"\n                value={this.state.form.duration}\n                className=\"short\"\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"hours\"\n                novalidate={true}\n              />\n            </div>\n          </Section>\n          <button\n            type=\"submit\"\n            className=\"btn-secondary event-form__submit-btn\"\n          >\n            Publish Event\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Section from \"../Section/Section\";\n\nconst InfoPage = ({header, type, message}) => {\n  return (\n    <div>\n      <Section header={header} type={type}>\n        {message}\n      </Section>\n    </div>\n  );\n};\n\nexport default InfoPage;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport EventForm from \"./components/EventForm/EventForm\";\nimport { Route, Switch } from \"react-router-dom\";\nimport InfoPage from \"./components/InfoPage/InfoPage\";\nimport { HashRouter } from \"react-router-dom\";\nimport { SECTION_TYPE } from \"./components/Section/Section\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader header=\"New event\" />\n        <div className=\"app__body\">\n          <div className=\"container\">\n            <HashRouter>\n              <Switch>\n                <Route exact path=\"/\" component={EventForm} />\n                <Route\n                  exact\n                  path=\"/success\"\n                  render={() => (\n                    <InfoPage\n                      header=\"Success\"\n                      message=\"Event has been created\"\n                      type={SECTION_TYPE.SUCCESS}\n                    />\n                  )}\n                />\n                <Route\n                  render={() => (\n                    <InfoPage\n                      header=\"404\"\n                      message=\"Page not found\"\n                      type={SECTION_TYPE.WARNING}\n                    />\n                  )}\n                />\n              </Switch>\n            </HashRouter>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}