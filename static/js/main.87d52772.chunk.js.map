{"version":3,"sources":["components/AppHeader/AppHeader.js","components/Section/Section.js","components/EventForm/FormHelper.js","components/Input/Input.js","components/EventForm/ErrorMessages.js","components/TextArea/TextArea.js","components/DescribedInput/DescribedInput.js","components/Select/Select.js","components/RadioButton/RadioButton.js","components/EventForm/EventForm.js","components/EventForm/SuccessPage.js","components/PageNotFound/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","_ref","header","react_default","a","createElement","className","SECTION_TYPE","Section","children","type","API","categories","coordinators","titleValidation","parseDateTime","input","dateTimeValue","date","time","meridiem","moment","format","parseCoordinators","response","map","item","name","lastname","join","id","PAID_EVENT_VALUES","FREE","PAID","MERIDIEM_VALUES","AM","PM","Input","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","novalidate","setErrorMessage","validity","handleChange","event","customValidation","target","value","onChange","debounce","then","hasError","setCustomValidity","setState","showErrors","errorTypes","prop","push","errorMessage","errorMessages","getInputClasses","classes","defaultInputClass","state","renderHint","hint","renderError","_this2","ref","placeholder","required","Component","ERROR_MESSAGES","title","valueMissing","customError","description","email","typeMismatch","patternMismatch","TextArea","rows","maxLength","length","DescribedInput","pattern","max","min","Select","options","option","key","RadioButton","checked","label","EventForm","fetch","json","selectLogedInCoordinator","logedInUserId","prevState","form","objectSpread","responsible","toString","handleSubmit","current","reportValidity","history","console","log","category_id","Number","category","paid_event","event_fee","fee","reward","duration","coordinator","wasValidated","preventDefault","validateTitle","events","titles","includes","isTitleInUse","handleInputChange","inputName","defineProperty","formSetup","React","createRef","onSubmit","noValidate","components_Section_Section","htmlFor","Input_Input","TextArea_TextArea","Select_Select","RadioButton_RadioButton","DescribedInput_DescribedInput","SuccessPage","PageNotFound","App","components_AppHeader_AppHeader","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87d52772.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./AppHeader.scss\";\n\nconst AppHeader = ({ header }) => {\n  return (\n    <header className=\"app-header\">\n      <div className=\"container\">\n        <h1>{header}</h1>\n      </div>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./Section.scss\";\n\nexport const SECTION_TYPE = {\n  SUCCESS: \"section-success\",\n  WARNING: \"section-warning\",\n  INFO: \"section-info\"\n};\n\nconst Section = ({ header, children, type }) => {\n  return (\n    <div className={\"section \" + type}>\n      <h2 className=\"section__header\">{header}</h2>\n      <hr />\n      <div className=\"section__body\">{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import moment from \"moment\";\n\nconst API = {\n  categories: \"https://www.mocky.io/v2/5bcdd3942f00002c00c855ba\",\n  coordinators: \"https://www.mocky.io/v2/5bcdd7992f00006300c855d5\",\n  titleValidation: \"https://www.mocky.io/v2/5bcdd8732f00007300c855da\"\n};\n\nexport function parseOutput(input) {\n  const secondsInHour = 60 * 60;\n\n  const output = {\n    title: input.title,\n    description: input.description,\n    category_id: Number(input.category),\n    paid_event: input.paid_event === PAID_EVENT_VALUES.FREE ? 0 : 1,\n    event_fee: Number(input.fee),\n    reward: Number(input.reward),\n    date: parseDateTime(input),\n    duration: Number(input.duration) * secondsInHour,\n    coordinator: {\n      id: input.responsible,\n      email: input.email\n    }\n  };\n\n  return output;\n}\n\nfunction parseDateTime(input) {\n  const { date, time, meridiem } = input;\n  const dateTimeValue = date + \" \" + time + \" \" + meridiem;\n  const outputFormat = \"YYYY-MM-DDTHH:mm\";\n\n  return moment(dateTimeValue, \"YYYY-MM-DD HH:mm am\").format(outputFormat);\n}\n\nexport function getCategories() {\n  return fetch(API.categories).then(response => response.json());\n}\n\nconst parseCoordinators = response => {\n  return response.map(item => {\n    return {\n      name: [item.name, item.lastname].join(\" \"),\n      id: item.id\n    };\n  });\n};\n\nexport function getCoordinators() {\n  return fetch(API.coordinators)\n    .then(response => response.json())\n    .then(json => parseCoordinators(json));\n}\n\nexport function isTitleInUse(title) {\n  return fetch(API.titleValidation)\n    .then(response => response.json())\n    .then(events => events.map(event => event.title))\n    .then(titles => titles.includes(title));\n}\n\nexport function getLogedInUserId() {\n  return 3;\n}\n\nexport const PAID_EVENT_VALUES = {\n  FREE: \"FREE\",\n  PAID: \"PAID\"\n};\n\nexport const MERIDIEM_VALUES = {\n  AM: \"AM\",\n  PM: \"PM\"\n};\n","import React, { Component } from \"react\";\nimport { debounce } from \"underscore\";\n\nexport default class Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: \"\",\n      showErrors: false\n    };\n\n    this.defaultInputClass = \"form-control\";\n  }\n\n  componentDidMount = () => {\n    if (!this.props.novalidate) {\n      this.setErrorMessage(this.input.validity);\n    }\n  };\n\n  handleChange = event => {\n    if (!this.props.novalidate) {\n      this.setErrorMessage(this.input.validity);\n    }\n\n    if (this.props.customValidation) {\n      this.customValidation(event.target.value);\n    }\n\n    this.props.onChange(event);\n  };\n\n  customValidation = debounce(value => {\n    this.props.customValidation(value).then(hasError => {\n      this.input.setCustomValidity(hasError ? ' ' : '');\n      this.setErrorMessage(this.input.validity);\n\n      this.setState({\n        showErrors: hasError\n      });\n    });\n  }, 1000);\n\n  setErrorMessage = validity => {\n    const errorTypes = [];\n\n    for (let prop in validity) {\n      if (validity[prop]) {\n        errorTypes.push(prop);\n      }\n    }\n\n    this.setState({\n      errorMessage: this.props.errorMessages[errorTypes[0]]\n    });\n  };\n\n  getInputClasses = () => {\n    const classes = [this.defaultInputClass];\n    if (this.state.showErrors) classes.push(\"has-errors\");\n    if (this.props.className) classes.push(this.props.className);\n\n    return classes.join(\" \");\n  };\n\n  renderHint = () => {\n    return this.props.hint ? (\n      <div className=\"form-control__hint\">{this.props.hint}</div>\n    ) : null;\n  };\n\n  renderError = () => {\n    return this.state.errorMessage ? (\n      <div className=\"form-control__error\">{this.state.errorMessage}</div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <input\n          ref={input => (this.input = input)}\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        {this.renderHint()}\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","export const ERROR_MESSAGES = {\n  title: {\n    valueMissing: \"Title cannot be empty\",\n    customError: \"Title already in use\"\n  },\n  description: {\n    valueMissing: \"Description cannot be empty\"\n  },\n  email: {\n    valueMissing: \"Email cannot be empty\",\n    typeMismatch: \"Wrong email address\"\n  },\n  date: {\n    valueMissing: \"Date cannot be empty\"\n  },\n  time: {\n    valueMissing: \"Time cannot be empty\",\n    patternMismatch: \"Time should have 12 hours format (HH:mm)\"\n  }\n};\n","import React from \"react\";\nimport Input from \"../Input/Input\";\n\nexport default class TextArea extends Input {\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <textarea\n          ref={input => (this.input = input)}\n          rows={this.props.rows}\n          maxLength={this.props.maxLength}\n          id={this.props.id}\n          name={this.props.name}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        <div className=\"form-control__hint\">\n          Max length {this.props.maxLength} characters\n          <span className=\"f-rigth\">\n            {this.props.value.length}/{this.props.maxLength}\n          </span>\n        </div>\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Input from \"../Input/Input\";\n\nexport default class DescribedInput extends Input {\n\n  constructor(props) {\n    super(props);\n\n    this.defaultInputClass = \"form-control form-control-inline\";\n  }\n\n  render() {\n    return (\n      <div className={this.getInputClasses()}>\n        <input\n          ref={input => (this.input = input)}\n          pattern={this.props.pattern}\n          id={this.props.id}\n          maxLength={this.props.max}\n          name={this.props.name}\n          min={this.props.min}\n          value={this.props.value}\n          onChange={this.handleChange}\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          required={this.props.required}\n        />\n        <span className=\"form-control__description\">\n          {this.props.description}\n        </span>\n\n        {this.renderHint()}\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Select extends Component {\n  renderHint = () => {\n    return this.props.hint ? (\n      <div className=\"form-control__hint\">{this.props.hint}</div>\n    ) : null;\n  };\n\n  render() {\n    return (\n      <div className=\"form-control\">\n        <select\n          value={this.props.value}\n          onChange={this.props.onChange}\n          name={this.props.name}\n          id={this.props.id}\n        >\n          {this.props.placeholder ? (\n            <option value=\"\">{this.props.placeholder}</option>\n          ) : null}\n\n          {this.props.options.map(option => {\n            return (\n              <option key={option.id} value={option.id}>\n                {option.name}\n              </option>\n            );\n          })}\n        </select>\n\n        {this.renderHint()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RadioButton extends Component {\n  render() {\n    return (\n      <div className=\"form-control form-control-inline\">\n        <input\n          type={this.props.type}\n          name={this.props.name}\n          onChange={this.props.onChange}\n          checked={this.props.checked}\n          value={this.props.value}\n        />\n        <span>{this.props.label}</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Section from \"../Section/Section\";\nimport \"./EventForm.scss\";\nimport moment from \"moment\";\nimport {\n  parseOutput,\n  MERIDIEM_VALUES,\n  PAID_EVENT_VALUES,\n  getCategories,\n  getCoordinators,\n  getLogedInUserId,\n  isTitleInUse\n} from \"./FormHelper\";\nimport Input from \"../Input/Input\";\nimport { ERROR_MESSAGES } from \"./ErrorMessages\";\nimport TextArea from \"../TextArea/TextArea\";\nimport DescribedInput from \"../DescribedInput/DescribedInput\";\nimport Select from \"../Select/Select\";\nimport RadioButton from \"../RadioButton/RadioButton\";\n\nexport default class EventForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      form: {\n        title: \"\",\n        description: \"\",\n        category: \"\",\n        paid_event: PAID_EVENT_VALUES.FREE,\n        fee: \"\",\n        reward: \"\",\n        responsible: \"\",\n        email: \"\",\n        date: \"\",\n        time: \"\",\n        meridiem: MERIDIEM_VALUES.AM,\n        duration: \"\"\n      },\n      categories: [],\n      coordinators: [],\n      logedInUserId: null,\n      wasValidated: false\n    };\n\n    this.formSetup = {\n      description: {\n        maxLength: 140\n      },\n      fee: {\n        min: 0\n      },\n      reward: {\n        min: 0\n      },\n      date: {\n        min: moment().format(\"YYYY-MM-DD\")\n      },\n      duration: {\n        min: 0\n      }\n    };\n\n    this.form = React.createRef();\n  }\n\n  componentDidMount = () => {\n    getCategories().then(categories => {\n      this.setState({ categories });\n    });\n\n    getCoordinators()\n      .then(coordinators => this.selectLogedInCoordinator(coordinators))\n      .then(coordinators => {\n        this.setState({ coordinators });\n      });\n\n    const logedInUserId = getLogedInUserId();\n\n    this.setState(prevState => ({\n      logedInUserId,\n      form: {\n        ...prevState.form,\n        responsible: logedInUserId.toString()\n      }\n    }));\n  };\n\n  selectLogedInCoordinator(coordinators) {\n    return coordinators.map(coordinator => {\n      if (coordinator.id === this.state.logedInUserId) {\n        coordinator.name = \"Me - \" + coordinator.name;\n      }\n\n      return coordinator;\n    });\n  }\n\n  handleSubmit = event => {\n    if (this.form.current.reportValidity()) {\n      this.props.history.push(\"/success\");\n      console.log(\"Output: \", parseOutput(this.state.form));\n    }\n\n    this.setState({\n      wasValidated: true\n    });\n\n    event.preventDefault();\n  };\n\n  validateTitle = title => {\n    return isTitleInUse(title);\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n\n    this.setState(prevState => ({\n      form: {\n        ...prevState.form,\n        [inputName]: value\n      }\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"event-form\">\n        <form\n          ref={this.form}\n          onSubmit={this.handleSubmit}\n          noValidate\n          className={this.state.wasValidated ? \"was-validated\" : \"\"}\n        >\n          <Section header=\"About\">\n            <div className=\"form-group required\">\n              <label htmlFor=\"title\">TITLE</label>\n              <Input\n                id=\"title\"\n                name=\"title\"\n                value={this.state.form.title}\n                onChange={this.handleInputChange}\n                type=\"text\"\n                placeholder=\"Make it short and clear\"\n                customValidation={this.validateTitle}\n                errorMessages={ERROR_MESSAGES.title}\n                required={true}\n              />\n            </div>\n\n            <div className=\"form-group required\">\n              <label htmlFor=\"description\">DESCRIPTION</label>\n              <TextArea\n                rows=\"4\"\n                maxLength={this.formSetup.description.maxLength}\n                id=\"description\"\n                name=\"description\"\n                hint=\"Max length {this.formSetup.description.maxLength} characters\"\n                type=\"text\"\n                value={this.state.form.description}\n                placeholder=\"Write about your event, be creative\"\n                errorMessages={ERROR_MESSAGES.description}\n                onChange={this.handleInputChange}\n                required={true}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">CATEGORY</label>\n              <Select\n                value={this.state.form.category}\n                onChange={this.handleInputChange}\n                name=\"category\"\n                id=\"category\"\n                options={this.state.categories}\n                placeholder=\"Select category\"\n                hint=\"Describes topis and people who should be intrested in this event\"\n              />\n            </div>\n\n            <div className=\"form-group form-group-inline\">\n              <label>PAYMENT</label>\n              <RadioButton\n                type=\"radio\"\n                name=\"paid_event\"\n                onChange={this.handleInputChange}\n                checked={this.state.form.paid_event === PAID_EVENT_VALUES.FREE}\n                value={PAID_EVENT_VALUES.FREE}\n                label=\"Free event\"\n              />\n              <RadioButton\n                type=\"radio\"\n                name=\"paid_event\"\n                onChange={this.handleInputChange}\n                checked={this.state.form.paid_event === PAID_EVENT_VALUES.PAID}\n                value={PAID_EVENT_VALUES.PAID}\n                label=\"Paid event\"\n              />\n              {this.state.form.paid_event === PAID_EVENT_VALUES.PAID ? (\n                <DescribedInput\n                  type=\"number\"\n                  className=\"fee-control short\"\n                  name=\"fee\"\n                  value={this.state.form.fee}\n                  onChange={this.handleInputChange}\n                  min={this.formSetup.fee.min}\n                  placeholder=\"Fee\"\n                  description=\"$\"\n                  novalidate={true}\n                />\n              ) : null}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"reward\">REWARD</label>\n              <DescribedInput\n                type=\"number\"\n                className=\"short\"\n                id=\"reward\"\n                name=\"reward\"\n                value={this.state.form.reward}\n                onChange={this.handleInputChange}\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"reward points for attendance\"\n                novalidate={true}\n              />\n            </div>\n          </Section>\n          <Section header=\"Coordinator\">\n            <div className=\"form-group required\">\n              <label htmlFor=\"responsible\">RESPONSIBLE</label>\n              <Select\n                value={this.state.form.responsible}\n                onChange={this.handleInputChange}\n                name=\"responsible\"\n                id=\"responsible\"\n                options={this.state.coordinators}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">EMAIL</label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                value={this.state.form.email}\n                onChange={this.handleInputChange}\n                type=\"email\"\n                placeholder=\"Email\"\n                errorMessages={ERROR_MESSAGES.email}\n              />\n            </div>\n          </Section>\n          <Section header=\"When\">\n            <div className=\"form-group required form-group-inline\">\n              <label>STARTS ON</label>\n              <DescribedInput\n                id=\"date\"\n                name=\"date\"\n                onChange={this.handleInputChange}\n                type=\"date\"\n                className=\"medium\"\n                min={this.formSetup.date.min}\n                placeholder=\"dd/mm/yyyy\"\n                description=\"at\"\n                errorMessages={ERROR_MESSAGES.date}\n                required={true}\n              />\n\n              <DescribedInput\n                id=\"time\"\n                name=\"time\"\n                onChange={this.handleInputChange}\n                type=\"text\"\n                max=\"5\"\n                pattern=\"^(1[0-2]|0?[1-9]):[0-5][0-9]$\"\n                className=\"time-control short\"\n                placeholder=\"--:--\"\n                errorMessages={ERROR_MESSAGES.time}\n                required={true}\n              />\n\n              <RadioButton\n                type=\"radio\"\n                onChange={this.handleInputChange}\n                checked={this.state.form.meridiem === MERIDIEM_VALUES.AM}\n                name=\"meridiem\"\n                value={MERIDIEM_VALUES.AM}\n                label=\"AM\"\n              />\n              <RadioButton\n                type=\"radio\"\n                onChange={this.handleInputChange}\n                checked={this.state.form.meridiem === MERIDIEM_VALUES.PM}\n                name=\"meridiem\"\n                value={MERIDIEM_VALUES.PM}\n                label=\"PM\"\n              />\n            </div>\n\n            <div className=\"form-group form-group-inline\">\n              <label htmlFor=\"duration\">DURATION</label>\n              <DescribedInput\n                id=\"duration\"\n                name=\"duration\"\n                onChange={this.handleInputChange}\n                type=\"number\"\n                value={this.state.form.duration}\n                className=\"short\"\n                min={this.formSetup.reward.min}\n                placeholder=\"Number\"\n                description=\"hours\"\n                novalidate={true}\n              />\n            </div>\n          </Section>\n          <button\n            type=\"submit\"\n            className=\"btn-secondary event-form__submit-btn\"\n          >\n            Publish Event\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Section, { SECTION_TYPE } from \"../Section/Section\";\n\nconst SuccessPage = () => {\n  return (\n    <div>\n      <Section header=\"Success\" type={SECTION_TYPE.SUCCESS}>\n        Event has been created\n      </Section>\n    </div>\n  );\n};\n\nexport default SuccessPage;\n","import React from \"react\";\nimport Section, { SECTION_TYPE } from \"../Section/Section\";\n\nconst PageNotFound = () => {\n  return (\n    <div>\n      <Section header=\"404\" type={SECTION_TYPE.WARNING}>\n        Page not found\n      </Section>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport AppHeader from \"./components/AppHeader/AppHeader\";\nimport EventForm from \"./components/EventForm/EventForm\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SuccessPage from \"./components/EventForm/SuccessPage\";\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader header=\"New event\" />\n        <div className=\"app__body\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={EventForm} />\n              <Route exact path=\"/success\" component={SuccessPage} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}